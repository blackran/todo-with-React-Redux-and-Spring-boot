{"ast":null,"code":"import _slicedToArray from \"/home/files/hybrid pojects/TODO/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/files/hybrid pojects/TODO/react/src/Components/FormDialog.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/AddCircle';\nimport { connect } from 'react-redux';\n\nfunction FormDialog(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClickOpen.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \" \", \"ADD USER\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"ADD USER\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Add a lot user\"), React.createElement(\"form\", {\n    onSubmit: props.onsubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"pseudo\",\n    label: \"Pseudo\",\n    type: \"text\",\n    fullWidth: true,\n    value: props.states.mocksClientPseudo,\n    onChange: props.onchangePseudo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"password\",\n    label: \"Password\",\n    type: \"text\",\n    fullWidth: true,\n    value: props.states.mocksClientPassword,\n    onChange: props.onchangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    type: \"submit\",\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Add \", props.test))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    states: state.clients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteClients: id => {\n      dispatch({\n        type: \"DELETE_CLIENTS\",\n        id: id\n      });\n    },\n    addclient: state => {\n      dispatch({\n        type: \"ADD_CLIENTS\",\n        data: state\n      });\n    },\n    acceptupdateedit: (id, state) => {\n      dispatch({\n        type: \"ACCEPT_UPDATE_EDIT\",\n        id: id,\n        data: state\n      });\n    },\n    fetchClients: state => {\n      dispatch({\n        type: \"FETCH_CLIENT\",\n        data: state\n      });\n    },\n    updateClients: data => {\n      dispatch({\n        type: \"UPDATE_CLIENTS\",\n        data: data\n      });\n    },\n    OnChangeClientInputPseudo: data => {\n      dispatch({\n        type: \"UPDATE_MOCKS_CLIENT_PSEUDO\",\n        data: data\n      });\n    },\n    OnChangeClientInputPassword: data => {\n      dispatch({\n        type: \"UPDATE_MOCKS_CLIENT_PASSWORD\",\n        data: data\n      });\n    },\n    updateMocksEdit: data => {\n      dispatch({\n        type: \"UPDATE_MOCKS_EDIT\",\n        data: data\n      });\n    },\n    updateOneClient: data => {\n      dispatch({\n        type: \"UPDATE_ONE_CLIENT\",\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);","map":{"version":3,"sources":["/home/files/hybrid pojects/TODO/react/src/Components/FormDialog.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AddIcon","connect","FormDialog","props","useState","open","setOpen","handleClickOpen","handleClose","bind","onsubmit","states","mocksClientPseudo","onchangePseudo","mocksClientPassword","onchangePassword","test","mapStateToProps","state","clients","mapDispatchToProps","dispatch","deleteClients","id","type","addclient","data","acceptupdateedit","fetchClients","updateClients","OnChangeClientInputPseudo","OnChangeClientInputPassword","updateMocksEdit","updateOneClient"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/AddCircle';\nimport {connect} from 'react-redux';\n\nfunction FormDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen.bind(this)}>\n        <AddIcon/>{\" \"}\n        ADD USER\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">ADD USER</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add a lot user\n          </DialogContentText>\n          <form onSubmit={props.onsubmit}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"pseudo\"\n              label=\"Pseudo\"\n              type=\"text\"\n              fullWidth\n              value={props.states.mocksClientPseudo}\n              onChange={props.onchangePseudo}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"password\"\n              label=\"Password\"\n              type=\"text\"\n              fullWidth\n              value={props.states.mocksClientPassword}\n              onChange={props.onchangePassword}\n            />\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" onClick={handleClose} color=\"primary\">\n                Add { props.test }\n              </Button>\n            </DialogActions>\n\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n\treturn {states: state.clients}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tdeleteClients: id => {\n\t\t\tdispatch({type: \"DELETE_CLIENTS\", id: id});\n\t\t},\n\t\taddclient: state => {\n\t\t\tdispatch({type: \"ADD_CLIENTS\", data: state});\n\t\t},\n\n\t\tacceptupdateedit: (id, state) => {\n\t\t\tdispatch({type: \"ACCEPT_UPDATE_EDIT\", id: id, data: state});\n\t\t},\n\n\t\tfetchClients: state => {\n\t\t\tdispatch({type: \"FETCH_CLIENT\", data: state});\n\t\t},\n\n\t\tupdateClients: data => {\n\t\t\tdispatch({type: \"UPDATE_CLIENTS\", data: data});\n\t\t},\n\n\t\tOnChangeClientInputPseudo: data => {\n\t\t\tdispatch({type: \"UPDATE_MOCKS_CLIENT_PSEUDO\", data: data});\n\t\t},\n\t\tOnChangeClientInputPassword: data => {\n\t\t\tdispatch({type: \"UPDATE_MOCKS_CLIENT_PASSWORD\", data: data});\n\t\t},\n\n\t\tupdateMocksEdit: data => {\n\t\t\tdispatch({type: \"UPDATE_MOCKS_EDIT\", data: data});\n\t\t},\n\n\t\tupdateOneClient: data => {\n\t\t\tdispatch({type: \"UPDATE_ONE_CLIENT\", data: data});\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n"]},"metadata":{},"sourceType":"module"}