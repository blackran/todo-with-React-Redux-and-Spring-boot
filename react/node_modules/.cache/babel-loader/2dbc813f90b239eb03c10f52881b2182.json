{"ast":null,"code":"import axios from 'axios';\nimport { ADD_CLIENTS, FETCH_CLIENT, UPDATE_ONE_CLIENT, UPDATE_MOCKS_CLIENT_PSEUDO, UPDATE_MOCKS_CLIENT_PASSWORD, DELETE_CLIENTS, UPDATE_CLIENTS, SAVE_NUM_CLIENT } from '../actions/typesClients';\nconst initState = {\n  dataClients: [// {\n    // \tid:\"1\",\n    // \tpseudo:\"blackran\",\n    // \tpassword: \"pass\"\n    // }\n  ],\n  mocksClientPseudo: '',\n  mocksClientPassword: '',\n  one: true,\n  submitReusit: true,\n  saveNumCli: []\n};\n\nconst clientReducers = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_CLIENTS:\n      state.dataClients = [...state.dataClients, action.data];\n      axios.post(\"http://localhost:8080/clients/add\", action.data).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.dataClients);\n\n    case DELETE_CLIENTS:\n      const st = state.dataClients.filter(e => {\n        return e.id !== action.id;\n      });\n      state.dataClients = [...st];\n      axios.delete(\"http://localhost:8080/clients/\" + action.id).then(e => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.clients);\n\n    case UPDATE_CLIENTS:\n      const std1 = state.tasks.filter(e => {\n        return e.id !== action.id;\n      });\n      const sto1 = action.data;\n      state.tasks = [...std1, ...sto1];\n      return Object.assign({}, state, state.tasks);\n\n    case SAVE_NUM_CLIENT:\n      state.saveNumCli = [];\n      state.saveNumCli = action.data;\n      return Object.assign({}, state, state.saveNumCli);\n\n    case FETCH_CLIENT:\n      state.dataClients = [];\n      state.dataClients = [...state.dataClients, ...action.data];\n      return Object.assign({}, state, state.dataClients);\n\n    case UPDATE_ONE_CLIENT:\n      state.one = action.data;\n      return Object.assign({}, state, state.one);\n\n    case UPDATE_MOCKS_CLIENT_PSEUDO:\n      state.mocksClientPseudo = action.data;\n      return Object.assign({}, state, state.mocksClientPseudo);\n\n    case UPDATE_MOCKS_CLIENT_PASSWORD:\n      state.mocksClientPassword = action.data;\n      return Object.assign({}, state, state.mocksClientPassword);\n\n    default:\n      return state;\n  }\n};\n\nexport default clientReducers;","map":{"version":3,"sources":["/home/files/hybrid pojects/TODO/react/src/reducers/clientReducers.js"],"names":["axios","ADD_CLIENTS","FETCH_CLIENT","UPDATE_ONE_CLIENT","UPDATE_MOCKS_CLIENT_PSEUDO","UPDATE_MOCKS_CLIENT_PASSWORD","DELETE_CLIENTS","UPDATE_CLIENTS","SAVE_NUM_CLIENT","initState","dataClients","mocksClientPseudo","mocksClientPassword","one","submitReusit","saveNumCli","clientReducers","state","action","type","data","post","then","h","console","log","catch","err","Object","assign","st","filter","e","id","delete","clients","std1","tasks","sto1"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n\tADD_CLIENTS,\n\tFETCH_CLIENT,\n\tUPDATE_ONE_CLIENT,\n\tUPDATE_MOCKS_CLIENT_PSEUDO,\n\tUPDATE_MOCKS_CLIENT_PASSWORD,\n\tDELETE_CLIENTS,\n\tUPDATE_CLIENTS,\n\tSAVE_NUM_CLIENT\n} from '../actions/typesClients';\n\nconst initState = {\n\tdataClients: [\n\t\t// {\n\t\t// \tid:\"1\",\n\t\t// \tpseudo:\"blackran\",\n\t\t// \tpassword: \"pass\"\n\t\t// }\n\t],\n\tmocksClientPseudo: '',\n\tmocksClientPassword: '',\n\tone: true,\n\tsubmitReusit: true,\n\tsaveNumCli: []\n}\nconst clientReducers = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_CLIENTS:\n\t\t\tstate.dataClients = [\n\t\t\t\t...state.dataClients,\n\t\t\t\taction.data\n\t\t\t];\n\t\t\taxios.post(\"http://localhost:8080/clients/add\", action.data).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.dataClients);\n\n\t\tcase DELETE_CLIENTS:\n\t\t\tconst st = state.dataClients.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tstate.dataClients = [...st]\n\t\t\taxios.delete(\"http://localhost:8080/clients/\" + action.id).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.clients);\n\n\t\tcase UPDATE_CLIENTS:\n\t\t\tconst std1 = state.tasks.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tconst sto1 = action.data;\n\t\t\tstate.tasks = [\n\t\t\t\t...std1, ...sto1\n\t\t\t];\n\t\t\treturn Object.assign({}, state, state.tasks);\n\n\t\tcase SAVE_NUM_CLIENT:\n\t\t\tstate.saveNumCli = [];\n\t\t\tstate.saveNumCli = action.data;\n\t\t\treturn Object.assign({}, state, state.saveNumCli);\n\n\t\tcase FETCH_CLIENT:\n\t\t\tstate.dataClients = [];\n\t\t\tstate.dataClients = [\n\t\t\t\t...state.dataClients,\n\t\t\t\t...action.data\n\t\t\t];\n\t\t\treturn Object.assign({}, state, state.dataClients);\n\n\t\tcase UPDATE_ONE_CLIENT:\n\t\t\tstate.one = action.data;\n\t\t\treturn Object.assign({}, state, state.one);\n\n\t\tcase UPDATE_MOCKS_CLIENT_PSEUDO:\n\t\t\tstate.mocksClientPseudo = action.data;\n\t\t\treturn Object.assign({}, state, state.mocksClientPseudo);\n\n\t\tcase UPDATE_MOCKS_CLIENT_PASSWORD:\n\t\t\tstate.mocksClientPassword = action.data;\n\t\t\treturn Object.assign({}, state, state.mocksClientPassword);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default clientReducers;\n"]},"metadata":{},"sourceType":"module"}