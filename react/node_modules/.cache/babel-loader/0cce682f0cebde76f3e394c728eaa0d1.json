{"ast":null,"code":"var _jsxFileName = \"/home/files/hybrid pojects/TODO/react/src/Components/TextFields.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Delete from '@material-ui/icons/DeleteRounded';\nimport { connect } from 'react-redux';\nimport './TextFields.scss';\nimport shortid from 'shortid';\nimport axios from 'axios'; //import Fab from '@material-ui/core/Fab';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { createBrowserHistory } from 'history';\n\nclass TextFields extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.OnClickDeleteTask = id => {\n      // if (window.confirm(\"executer la suprimation\")) {\n      this.props.deleteTask(id); // }\n    };\n\n    this.OnClickCheckTask = id => {\n      this.props.checktask(id);\n    };\n\n    this.OnClickCheckTaskAll = () => {\n      this.props.checktaskall();\n    };\n\n    this.OnSubmitToAddTask = e => {\n      e.preventDefault();\n\n      if (this.props.clients.saveNumCli.length !== 0) {\n        const clients = this.props.clients.saveNumCli[0].id;\n        const stock = {\n          id: shortid.generate(),\n          task: this.props.tasks.mocks,\n          etats: false,\n          edit: false,\n          clients: clients\n        };\n\n        if (this.props.tasks.mocks) {\n          this.props.addtask(stock);\n          this.props.updateMocks('');\n        }\n      }\n    };\n\n    this.OnSubmitToUpdateTask = (id, e) => {\n      e.preventDefault();\n      const stock = {\n        id: id,\n        task: this.props.tasks.mocksEdit,\n        etats: false,\n        edit: false\n      };\n\n      if (this.props.tasks.mocksEdit) {\n        this.props.acceptupdateedit(id, stock);\n      }\n    };\n\n    this.onClicEdit = id => {\n      this.props.updatetaskedit(id);\n    };\n\n    this.OnChangeInput = e => {\n      return this.props.updateMocks(e.target.value);\n    };\n\n    this.OnChangeInputEdit = e => {\n      return this.props.updateMocksEdit(e.target.value);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.clients.saveNumCli.length !== 0) {\n      const clients = this.props.clients.saveNumCli[0].id;\n\n      if (this.props.tasks.dataTasks.length === 0) {\n        const url = \"http://localhost:8080/task/all/\" + clients;\n        axios.get(url).then(res => res.data).then(state => this.props.fetchtask(state)).catch(err => console.log(\"error parsing:\\n\", err));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.setdatadefault();\n  }\n\n  render() {\n    const history = createBrowserHistory();\n\n    while (this.props.clients.saveNumCli.length === 0 && history.location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n\n    console.log(this.props.clients.saveNumCli.length + \" \" + history.location.pathname);\n    const tasks = this.props.tasks;\n    const completedStyle = {\n      fontStyle: \"italic\",\n      color: \"#cdcdcd\",\n      textDecoration: \"line-through\"\n    };\n    const styles = {\n      PaperHead: {\n        padding: 10,\n        margin: 10,\n        color: '#727185',\n        borderRadius: 3\n      },\n      Paper: {\n        padding: 10,\n        paddingRigth: 20,\n        margin: 10,\n        display: 'block'\n      },\n      Input: {\n        padding: 10,\n        margin: 10,\n        width: 200,\n        color: '#727185',\n        borderRadius: 3\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      direction: \"column\",\n      alignItems: \"flex-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      variant: \"contained\",\n      size: \"small\",\n      \"aria-label\": \"small contained button group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"ALL \", React.createElement(\"span\", {\n      className: \"litle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, tasks.dataTasks.length)), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"NOT FINISH \", React.createElement(\"span\", {\n      className: \"litle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, tasks.dataTasks.filter(j => {\n      return j.etats === false;\n    }).length)), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"FINISH \", React.createElement(\"span\", {\n      className: \"litle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, tasks.dataTasks.filter(j => {\n      return j.etats === true;\n    }).length)))))), React.createElement(Paper, {\n      style: styles.Input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      styles: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      noValidate: \"noValidate\",\n      autoComplete: \"off\",\n      onSubmit: this.OnSubmitToAddTask.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"TASK\",\n      placeholder: \"put here your task\",\n      styles: {\n        width: 200\n      },\n      margin: \"normal\",\n      value: this.props.tasks.mocks,\n      onChange: this.OnChangeInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: this.props.clients.saveNumCli.length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"add task\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), \" \", tasks.dataTasks.length !== 0 ? React.createElement(Checkbox, {\n      color: \"primary\",\n      onClick: () => this.OnClickCheckTaskAll(),\n      checked: tasks.dataTasks.filter(j => {\n        return j.etats === false;\n      }).length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }) : null, React.createElement(\"span\", {\n      style: tasks.dataTasks.filter(j => {\n        return j.etats === false;\n      }).length === 0 ? completedStyle : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, tasks.dataTasks.length !== 0 ? \"check all\" : null), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, tasks.dataTasks.length !== 0 ? tasks.dataTasks.map(h => {\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        key: h.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: styles.Paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: h.etats,\n        color: \"primary\",\n        onClick: () => this.OnClickCheckTask(h.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), \" \", h.edit ? React.createElement(\"form\", {\n        styles: {\n          display: 'flex',\n          flexWrap: 'wrap'\n        },\n        noValidate: \"noValidate\",\n        autoComplete: \"off\",\n        onSubmit: this.OnSubmitToUpdateTask.bind(this, h.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"standard-with-placeholder\",\n        style: {\n          marginBottom: -23,\n          marginTop: 7\n        },\n        variant: \"outlined\",\n        styles: {\n          width: 2000\n        },\n        margin: \"normal\",\n        value: tasks.mocksEdit,\n        onChange: this.OnChangeInputEdit.bind(this),\n        className: \"textfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })) : React.createElement(\"span\", {\n        style: h.etats ? completedStyle : null,\n        onDoubleClick: () => this.onClicEdit(h.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, h.task, \" \"), React.createElement(Delete, {\n        onClick: () => this.OnClickDeleteTask(h.id),\n        color: \"secondary\",\n        size: \"medium\",\n        className: \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))));\n    }) : React.createElement(\"h1\", {\n      style: {\n        opacity: 0.5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"not exist task\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks,\n    clients: state.clients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: id => {\n      dispatch({\n        type: \"DELETE_TASK\",\n        id: id\n      });\n    },\n    addtask: state => {\n      dispatch({\n        type: \"ADD_TASK\",\n        data: state\n      });\n    },\n    acceptupdateedit: (id, state) => {\n      dispatch({\n        type: \"ACCEPT_UPDATE_EDIT\",\n        id: id,\n        data: state\n      });\n    },\n    fetchtask: data => {\n      dispatch({\n        type: \"FETCH_TASK\",\n        data: data\n      });\n    },\n    checktask: id => {\n      dispatch({\n        type: \"CHECK_TASK\",\n        id: id\n      });\n    },\n    updatetaskedit: id => {\n      dispatch({\n        type: \"UPDATE_TASK_EDIT\",\n        id: id\n      });\n    },\n    updatetask: data => {\n      dispatch({\n        type: \"UPDATE_TASK\",\n        data: data\n      });\n    },\n    checktaskall: () => {\n      dispatch({\n        type: \"CHECK_TASK_ALL\"\n      });\n    },\n    updateMocks: data => {\n      dispatch({\n        type: \"UPDATE_MOCKS\",\n        data: data\n      });\n    },\n    updateMocksEdit: data => {\n      dispatch({\n        type: \"UPDATE_MOCKS_EDIT\",\n        data: data\n      });\n    },\n    updateOne: data => {\n      dispatch({\n        type: \"UPDATE_ONE\",\n        data: data\n      });\n    },\n    setdatadefault: () => {\n      dispatch({\n        type: \"SET_DATA_DEFAULT\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextFields);","map":{"version":3,"sources":["/home/files/hybrid pojects/TODO/react/src/Components/TextFields.js"],"names":["React","Component","TextField","Button","Checkbox","Grid","Paper","Delete","connect","shortid","axios","ButtonGroup","createBrowserHistory","TextFields","OnClickDeleteTask","id","props","deleteTask","OnClickCheckTask","checktask","OnClickCheckTaskAll","checktaskall","OnSubmitToAddTask","e","preventDefault","clients","saveNumCli","length","stock","generate","task","tasks","mocks","etats","edit","addtask","updateMocks","OnSubmitToUpdateTask","mocksEdit","acceptupdateedit","onClicEdit","updatetaskedit","OnChangeInput","target","value","OnChangeInputEdit","updateMocksEdit","componentDidMount","dataTasks","url","get","then","res","data","state","fetchtask","catch","err","console","log","componentWillUnmount","setdatadefault","render","history","location","pathname","push","completedStyle","fontStyle","color","textDecoration","styles","PaperHead","padding","margin","borderRadius","paddingRigth","display","Input","width","filter","j","flexWrap","bind","map","h","marginBottom","marginTop","opacity","mapStateToProps","mapDispatchToProps","dispatch","type","updatetask","updateOne"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Delete from '@material-ui/icons/DeleteRounded';\nimport {connect} from 'react-redux';\nimport './TextFields.scss';\nimport shortid from 'shortid';\nimport axios from 'axios';\n//import Fab from '@material-ui/core/Fab';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { createBrowserHistory } from 'history';\n\nclass TextFields extends Component {\n\n\tOnClickDeleteTask = (id) => {\n\t\t// if (window.confirm(\"executer la suprimation\")) {\n\t\t\tthis.props.deleteTask(id);\n\t\t// }\n\t}\n\n\tOnClickCheckTask = (id) => {\n\t\tthis.props.checktask(id);\n\t}\n\tOnClickCheckTaskAll = () => {\n\t\tthis.props.checktaskall();\n\t}\n\n\tOnSubmitToAddTask = (e) => {\n\t\te.preventDefault();\n\t\tif(this.props.clients.saveNumCli.length !== 0){\n\t\t\tconst clients = this.props.clients.saveNumCli[0].id;\n\t\t\tconst stock = {\n\t\t\t\tid: shortid.generate(),\n\t\t\t\ttask: this.props.tasks.mocks,\n\t\t\t\tetats: false,\n\t\t\t\tedit: false,\n\t\t\t\tclients: clients\n\t\t\t}\n\t\t\tif (this.props.tasks.mocks) {\n\t\t\t\tthis.props.addtask(stock);\n\t\t\t\tthis.props.updateMocks('');\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\n\t\tif(this.props.clients.saveNumCli.length !== 0){\n\t\t\tconst clients = this.props.clients.saveNumCli[0].id;\n\t\t\tif (this.props.tasks.dataTasks.length === 0) {\n\t\t\t\tconst url = \"http://localhost:8080/task/all/\"+clients;\n\t\t\t\taxios.get(url)\n\t\t\t\t.then(res => res.data)\n\t\t\t\t.then(state => this.props.fetchtask(state))\n\t\t\t\t.catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.setdatadefault();\n\t}\n\n\tOnSubmitToUpdateTask = (id, e) => {\n\t\te.preventDefault();\n\n\t\tconst stock = {\n\t\t\tid: id,\n\t\t\ttask: this.props.tasks.mocksEdit,\n\t\t\tetats: false,\n\t\t\tedit: false\n\t\t}\n\t\tif (this.props.tasks.mocksEdit) {\n\t\t\tthis.props.acceptupdateedit(id, stock);\n\t\t}\n\t}\n\n\tonClicEdit = (id) => {\n\t\tthis.props.updatetaskedit(id);\n\t}\n\n\tOnChangeInput = (e) => {\n\t\treturn this.props.updateMocks(e.target.value);\n\t}\n\n\tOnChangeInputEdit = (e) => {\n\t\treturn this.props.updateMocksEdit(e.target.value);\n\t}\n\n\trender() {\n\t\tconst history = createBrowserHistory();\n\t\twhile(this.props.clients.saveNumCli.length === 0 && history.location.pathname!==\"/\"){\n\t\t\thistory.push(\"/\")\n\t\t}\n\t\tconsole.log(this.props.clients.saveNumCli.length +\" \"+ history.location.pathname)\n\t\tconst {tasks} = this.props;\n\t\tconst completedStyle = {\n\t\t\tfontStyle: \"italic\",\n\t\t\tcolor: \"#cdcdcd\",\n\t\t\ttextDecoration: \"line-through\"\n\t\t}\n\t\tconst styles = {\n\t\t\tPaperHead: {\n\t\t\t\tpadding: 10,\n\t\t\t\tmargin: 10,\n\t\t\t\tcolor: '#727185',\n\t\t\t\tborderRadius: 3\n\t\t\t},\n\t\t\tPaper: {\n\t\t\t\tpadding: 10,\n\t\t\t\tpaddingRigth: 20,\n\t\t\t\tmargin: 10,\n\t\t\t\tdisplay: 'block'\n\t\t\t},\n\t\t\tInput: {\n\t\t\t\tpadding: 10,\n\t\t\t\tmargin: 10,\n\t\t\t\twidth: 200,\n\t\t\t\tcolor: '#727185',\n\t\t\t\tborderRadius: 3\n\t\t\t}\n\t\t}\n\t\treturn (<div>\n\t\t\t<Grid item xs={12} md={6}>\n        <Grid container spacing={1} direction=\"column\" alignItems=\"flex-start\">\n          <Grid item>\n            <ButtonGroup variant=\"contained\" size=\"small\" aria-label=\"small contained button group\">\n              <Button>\n\t\t\t\t\t\t\t\tALL <span className=\"litle\">{tasks.dataTasks.length}</span>\n\t\t\t\t\t\t\t</Button>\n              <Button>\n\t\t\t\t\t\t\t\t\tNOT FINISH <span className=\"litle\">{\n\t\t\t\t\t\t\t\t\ttasks.dataTasks.filter(j => {\n\t\t\t\t\t\t\t\t\t\treturn j.etats === false;\n\t\t\t\t\t\t\t\t\t}).length\n\t\t\t\t\t\t\t\t}</span>\n\t\t\t\t\t\t\t</Button>\n              <Button>\n\t\t\t\t\t\t\t\t\tFINISH <span className=\"litle\">{\n\t\t\t\t\t\t\t\t\ttasks.dataTasks.filter(j => {\n\t\t\t\t\t\t\t\t\t\treturn j.etats === true;\n\t\t\t\t\t\t\t\t\t}).length\n\t\t\t\t\t\t\t\t}</span>\n\t\t\t\t\t\t\t</Button>\n            </ButtonGroup>\n          </Grid>\n        </Grid>\n      </Grid>\n\n\t\t\t<Paper style={styles.Input}>\n\t\t\t\t<form styles={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexWrap: 'wrap'\n\t\t\t\t\t}} noValidate=\"noValidate\" autoComplete=\"off\" onSubmit={this.OnSubmitToAddTask.bind(this)}>\n\t\t\t\t\t<TextField label=\"TASK\" placeholder=\"put here your task\" styles={{\n\t\t\t\t\t\t\twidth: 200\n\t\t\t\t\t\t}} margin=\"normal\" value={this.props.tasks.mocks} onChange={this.OnChangeInput.bind(this)}/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={this.props.clients.saveNumCli.length === 0}>\n\t\t\t\t\t\tadd task\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</Paper>\n\t\t\t<br/> {\n\t\t\t\ttasks.dataTasks.length !== 0\n\t\t\t\t\t? (<Checkbox color=\"primary\" onClick={() => this.OnClickCheckTaskAll()} checked={tasks.dataTasks.filter(j => {\n\t\t\t\t\t\t\treturn j.etats === false;\n\t\t\t\t\t\t}).length === 0}/>)\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t<span style={tasks.dataTasks.filter(j => {\n\t\t\t\t\treturn j.etats === false;\n\t\t\t\t}).length === 0\n\t\t\t\t\t? completedStyle\n\t\t\t\t\t: null}>\n\t\t\t\t{\n\t\t\t\t\ttasks.dataTasks.length !== 0\n\t\t\t\t\t\t? \"check all\"\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</span>\n\t\t\t<Grid container={true}>\n\t\t\t\t{\n\t\t\t\t\ttasks.dataTasks.length!==0?\n\t\t\t\t\ttasks.dataTasks.map((h) => {\n\t\t\t\t\t\treturn (<div className=\"grid\" key={h.id}>\n\t\t\t\t\t\t\t<Grid item={true}>\n\t\t\t\t\t\t\t\t<Paper style={styles.Paper}>\n\t\t\t\t\t\t\t\t\t<Checkbox checked={h.etats} color=\"primary\" onClick={() => this.OnClickCheckTask(h.id)}/> {\n\t\t\t\t\t\t\t\t\t\th.edit\n\t\t\t\t\t\t\t\t\t\t\t? <form styles={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tflexWrap: 'wrap'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} noValidate=\"noValidate\" autoComplete=\"off\" onSubmit={this.OnSubmitToUpdateTask.bind(this, h.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField id=\"standard-with-placeholder\" style={{marginBottom: -23,marginTop: 7}} variant=\"outlined\" styles={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 2000\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}} margin=\"normal\" value={tasks.mocksEdit} onChange={this.OnChangeInputEdit.bind(this)} className=\"textfield\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t\t: <span style={h.etats\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? completedStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null} onDoubleClick={() => this.onClicEdit(h.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{h.task}{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t<Delete onClick={() => this.OnClickDeleteTask(h.id)} color='secondary' size=\"medium\" className=\"delete\"/>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</div>);\n\t\t\t\t\t}):<h1 style={{opacity: 0.5}}>not exist task</h1>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t</div>);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {tasks: state.tasks, clients: state.clients}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tdeleteTask: id => {\n\t\t\tdispatch({type: \"DELETE_TASK\", id: id});\n\t\t},\n\t\taddtask: state => {\n\t\t\tdispatch({type: \"ADD_TASK\", data: state});\n\t\t},\n\t\tacceptupdateedit: (id, state) => {\n\t\t\tdispatch({type: \"ACCEPT_UPDATE_EDIT\", id: id, data: state});\n\t\t},\n\t\tfetchtask: data => {\n\t\t\tdispatch({type: \"FETCH_TASK\", data: data});\n\t\t},\n\t\tchecktask: id => {\n\t\t\tdispatch({type: \"CHECK_TASK\", id: id});\n\t\t},\n\t\tupdatetaskedit: id => {\n\t\t\tdispatch({type: \"UPDATE_TASK_EDIT\", id: id});\n\t\t},\n\t\tupdatetask: data => {\n\t\t\tdispatch({type: \"UPDATE_TASK\", data: data});\n\t\t},\n\t\tchecktaskall: () => {\n\t\t\tdispatch({type: \"CHECK_TASK_ALL\"});\n\t\t},\n\t\tupdateMocks: data => {\n\t\t\tdispatch({type: \"UPDATE_MOCKS\", data: data});\n\t\t},\n\t\tupdateMocksEdit: data => {\n\t\t\tdispatch({type: \"UPDATE_MOCKS_EDIT\", data: data});\n\t\t},\n\t\tupdateOne: data => {\n\t\t\tdispatch({type: \"UPDATE_ONE\", data: data});\n\t\t},\n\t\tsetdatadefault: () => {\n\t\t\tdispatch({type: \"SET_DATA_DEFAULT\"});\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextFields);\n"]},"metadata":{},"sourceType":"module"}