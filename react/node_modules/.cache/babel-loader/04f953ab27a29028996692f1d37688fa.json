{"ast":null,"code":"var _jsxFileName = \"/home/blackran/Desktop/todo/src/Components/TextFields.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Delete from '@material-ui/icons/DeleteRounded';\nimport { connect } from 'react-redux';\nimport './TextFields.scss';\nimport shortid from 'shortid';\nimport axios from 'axios'; //import Fab from '@material-ui/core/Fab';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nclass TextFields extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.OnClickDeleteTask = id => {\n      // if (window.confirm(\"executer la suprimation\")) {\n      this.props.deleteTask(id); // }\n    };\n\n    this.OnClickCheckTask = id => {\n      this.props.checktask(id);\n    };\n\n    this.OnClickCheckTaskAll = () => {\n      this.props.checktaskall();\n    };\n\n    this.OnSubmitToAddTask = e => {\n      e.preventDefault();\n      const stock = {\n        id: shortid.generate(),\n        task: this.props.states.mocks,\n        etats: false,\n        edit: false\n      };\n\n      if (this.props.states.mocks) {\n        this.props.addtask(stock);\n        this.props.updateMocks('');\n      }\n    };\n\n    this.OnSubmitToUpdateTask = (id, e) => {\n      e.preventDefault();\n      const stock = {\n        id: id,\n        task: this.props.states.mocksEdit,\n        etats: false,\n        edit: false\n      };\n\n      if (this.props.states.mocksEdit) {\n        this.props.acceptupdateedit(id, stock);\n      }\n    };\n\n    this.onClicEdit = id => {\n      this.props.updatetaskedit(id);\n    };\n\n    this.OnChangeInput = e => {\n      return this.props.updateMocks(e.target.value);\n    };\n\n    this.OnChangeInputEdit = e => {\n      return this.props.updateMocksEdit(e.target.value);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.states.one) {\n      axios.get(\"http://localhost:8080/task/all\").then(res => res.data).then(state => this.props.fetchtask(state)).catch(err => console.log(\"error parsing:\\n\", err));\n      this.props.updateOne(!this.props.states.one);\n    }\n  }\n\n  componentWillUnmount() {\n    // axios.post(\"http://localhost:8080/task/add\", this.props.states.tasks).then(() => console.log(\"true\")).catch(err => console.log(\"error parsing:\\n\", err));\n    this.props.updateOne(!this.props.states.one);\n    this.props.setdatadefault();\n  }\n\n  render() {\n    const states = this.props.states;\n    const completedStyle = {\n      fontStyle: \"italic\",\n      color: \"#cdcdcd\",\n      textDecoration: \"line-through\"\n    };\n    const styles = {\n      PaperHead: {\n        padding: 10,\n        margin: 10,\n        color: '#727185',\n        borderRadius: 3\n      },\n      Paper: {\n        padding: 10,\n        paddingRigth: 20,\n        margin: 10,\n        display: 'block'\n      },\n      Input: {\n        padding: 10,\n        margin: 10,\n        width: 200,\n        color: '#727185',\n        borderRadius: 3\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      direction: \"column\",\n      alignItems: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      variant: \"contained\",\n      size: \"small\",\n      \"aria-label\": \"small contained button group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"ALL \", React.createElement(\"span\", {\n      className: \"litle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, states.tasks.length)), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"NOT FINISH \", React.createElement(\"span\", {\n      className: \"litle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, states.tasks.filter(j => {\n      return j.etats === false;\n    }).length)), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"FINISH \", React.createElement(\"span\", {\n      className: \"litle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, states.tasks.filter(j => {\n      return j.etats === true;\n    }).length)))))), React.createElement(Paper, {\n      style: styles.Input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      styles: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      noValidate: \"noValidate\",\n      autoComplete: \"off\",\n      onSubmit: this.OnSubmitToAddTask.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"TASK\",\n      placeholder: \"put here your task\",\n      styles: {\n        width: 200\n      },\n      margin: \"normal\",\n      value: this.props.states.mocks,\n      onChange: this.OnChangeInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"add task\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \" \", states.tasks.length !== 0 ? React.createElement(Checkbox, {\n      color: \"primary\",\n      onClick: () => this.OnClickCheckTaskAll(),\n      checked: states.tasks.filter(j => {\n        return j.etats === false;\n      }).length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }) : null, React.createElement(\"span\", {\n      style: states.tasks.filter(j => {\n        return j.etats === false;\n      }).length === 0 ? completedStyle : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, states.tasks.length !== 0 ? \"check all\" : null), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, states.tasks.map(h => {\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: styles.Paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: h.etats,\n        color: \"primary\",\n        onClick: () => this.OnClickCheckTask(h.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), \" \", h.edit ? React.createElement(\"form\", {\n        styles: {\n          display: 'flex',\n          flexWrap: 'wrap'\n        },\n        noValidate: \"noValidate\",\n        autoComplete: \"off\",\n        onSubmit: this.OnSubmitToUpdateTask.bind(this, h.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"standard-with-placeholder\",\n        styles: {\n          width: 2000\n        },\n        margin: \"normal\",\n        value: states.mocksEdit,\n        onChange: this.OnChangeInputEdit.bind(this),\n        className: \"textfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })) : React.createElement(\"span\", {\n        style: h.etats ? completedStyle : null,\n        onDoubleClick: () => this.onClicEdit(h.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, h.task, \" \"), React.createElement(Delete, {\n        onClick: () => this.OnClickDeleteTask(h.id),\n        className: \"delete\",\n        large: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))));\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    states: state.tasks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: id => {\n      dispatch({\n        type: \"DELETE_TASK\",\n        id: id\n      });\n    },\n    addtask: state => {\n      dispatch({\n        type: \"ADD_TASK\",\n        data: state\n      });\n    },\n    acceptupdateedit: (id, state) => {\n      dispatch({\n        type: \"ACCEPT_UPDATE_EDIT\",\n        id: id,\n        data: state\n      });\n    },\n    fetchtask: state => {\n      dispatch({\n        type: \"FETCH_TASK\",\n        data: state\n      });\n    },\n    checktask: id => {\n      dispatch({\n        type: \"CHECK_TASK\",\n        id: id\n      });\n    },\n    updatetaskedit: id => {\n      dispatch({\n        type: \"UPDATE_TASK_EDIT\",\n        id: id\n      });\n    },\n    updatetask: data => {\n      dispatch({\n        type: \"UPDATE_TASK\",\n        data: data\n      });\n    },\n    checktaskall: () => {\n      dispatch({\n        type: \"CHECK_TASK_ALL\"\n      });\n    },\n    updateMocks: data => {\n      dispatch({\n        type: \"UPDATE_MOCKS\",\n        data: data\n      });\n    },\n    updateMocksEdit: data => {\n      dispatch({\n        type: \"UPDATE_MOCKS_EDIT\",\n        data: data\n      });\n    },\n    updateOne: data => {\n      dispatch({\n        type: \"UPDATE_ONE\",\n        data: data\n      });\n    },\n    setdatadefault: () => {\n      dispatch({\n        type: \"SET_DATA_DEFAULT\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextFields);","map":{"version":3,"sources":["/home/blackran/Desktop/todo/src/Components/TextFields.js"],"names":["React","Component","TextField","Button","Checkbox","Grid","Paper","Delete","connect","shortid","axios","ButtonGroup","TextFields","OnClickDeleteTask","id","props","deleteTask","OnClickCheckTask","checktask","OnClickCheckTaskAll","checktaskall","OnSubmitToAddTask","e","preventDefault","stock","generate","task","states","mocks","etats","edit","addtask","updateMocks","OnSubmitToUpdateTask","mocksEdit","acceptupdateedit","onClicEdit","updatetaskedit","OnChangeInput","target","value","OnChangeInputEdit","updateMocksEdit","componentDidMount","one","get","then","res","data","state","fetchtask","catch","err","console","log","updateOne","componentWillUnmount","setdatadefault","render","completedStyle","fontStyle","color","textDecoration","styles","PaperHead","padding","margin","borderRadius","paddingRigth","display","Input","width","tasks","length","filter","j","flexWrap","bind","map","h","mapStateToProps","mapDispatchToProps","dispatch","type","updatetask"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Delete from '@material-ui/icons/DeleteRounded';\nimport {connect} from 'react-redux';\nimport './TextFields.scss';\nimport shortid from 'shortid';\nimport axios from 'axios';\n//import Fab from '@material-ui/core/Fab';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nclass TextFields extends Component {\n\n\tOnClickDeleteTask = (id) => {\n\t\t// if (window.confirm(\"executer la suprimation\")) {\n\t\t\tthis.props.deleteTask(id);\n\t\t// }\n\t}\n\n\tOnClickCheckTask = (id) => {\n\t\tthis.props.checktask(id);\n\t}\n\tOnClickCheckTaskAll = () => {\n\t\tthis.props.checktaskall();\n\t}\n\n\tOnSubmitToAddTask = (e) => {\n\t\te.preventDefault();\n\t\tconst stock = {\n\t\t\tid: shortid.generate(),\n\t\t\ttask: this.props.states.mocks,\n\t\t\tetats: false,\n\t\t\tedit: false\n\t\t}\n\t\tif (this.props.states.mocks) {\n\t\t\tthis.props.addtask(stock);\n\t\t\tthis.props.updateMocks('');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.states.one) {\n\t\t\taxios.get(\"http://localhost:8080/task/all\").then(res => res.data).then(state => this.props.fetchtask(state)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\tthis.props.updateOne(!this.props.states.one);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// axios.post(\"http://localhost:8080/task/add\", this.props.states.tasks).then(() => console.log(\"true\")).catch(err => console.log(\"error parsing:\\n\", err));\n\t\tthis.props.updateOne(!this.props.states.one);\n\t\tthis.props.setdatadefault();\n\t}\n\n\tOnSubmitToUpdateTask = (id, e) => {\n\t\te.preventDefault();\n\n\t\tconst stock = {\n\t\t\tid: id,\n\t\t\ttask: this.props.states.mocksEdit,\n\t\t\tetats: false,\n\t\t\tedit: false\n\t\t}\n\t\tif (this.props.states.mocksEdit) {\n\t\t\tthis.props.acceptupdateedit(id, stock);\n\t\t}\n\t}\n\n\tonClicEdit = (id) => {\n\t\tthis.props.updatetaskedit(id);\n\t}\n\n\tOnChangeInput = (e) => {\n\t\treturn this.props.updateMocks(e.target.value);\n\t}\n\n\tOnChangeInputEdit = (e) => {\n\t\treturn this.props.updateMocksEdit(e.target.value);\n\t}\n\n\trender() {\n\t\tconst {states} = this.props;\n\t\tconst completedStyle = {\n\t\t\tfontStyle: \"italic\",\n\t\t\tcolor: \"#cdcdcd\",\n\t\t\ttextDecoration: \"line-through\"\n\t\t}\n\t\tconst styles = {\n\t\t\tPaperHead: {\n\t\t\t\tpadding: 10,\n\t\t\t\tmargin: 10,\n\t\t\t\tcolor: '#727185',\n\t\t\t\tborderRadius: 3\n\t\t\t},\n\t\t\tPaper: {\n\t\t\t\tpadding: 10,\n\t\t\t\tpaddingRigth: 20,\n\t\t\t\tmargin: 10,\n\t\t\t\tdisplay: 'block'\n\t\t\t},\n\t\t\tInput: {\n\t\t\t\tpadding: 10,\n\t\t\t\tmargin: 10,\n\t\t\t\twidth: 200,\n\t\t\t\tcolor: '#727185',\n\t\t\t\tborderRadius: 3\n\t\t\t}\n\t\t}\n\t\treturn (<div>\n\t\t\t<Grid item xs={12} md={6}>\n        <Grid container spacing={1} direction=\"column\" alignItems=\"left\">\n          <Grid item>\n            <ButtonGroup variant=\"contained\" size=\"small\" aria-label=\"small contained button group\">\n              <Button>\n\t\t\t\t\t\t\t\tALL <span className=\"litle\">{states.tasks.length}</span>\n\t\t\t\t\t\t\t</Button>\n              <Button>\n\t\t\t\t\t\t\t\t\tNOT FINISH <span className=\"litle\">{\n\t\t\t\t\t\t\t\t\tstates.tasks.filter(j => {\n\t\t\t\t\t\t\t\t\t\treturn j.etats === false;\n\t\t\t\t\t\t\t\t\t}).length\n\t\t\t\t\t\t\t\t}</span>\n\t\t\t\t\t\t\t</Button>\n              <Button>\n\t\t\t\t\t\t\t\t\tFINISH <span className=\"litle\">{\n\t\t\t\t\t\t\t\t\tstates.tasks.filter(j => {\n\t\t\t\t\t\t\t\t\t\treturn j.etats === true;\n\t\t\t\t\t\t\t\t\t}).length\n\t\t\t\t\t\t\t\t}</span>\n\t\t\t\t\t\t\t</Button>\n            </ButtonGroup>\n          </Grid>\n        </Grid>\n      </Grid>\n\n\t\t\t<Paper style={styles.Input}>\n\t\t\t\t<form styles={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexWrap: 'wrap'\n\t\t\t\t\t}} noValidate=\"noValidate\" autoComplete=\"off\" onSubmit={this.OnSubmitToAddTask.bind(this)}>\n\t\t\t\t\t<TextField label=\"TASK\" placeholder=\"put here your task\" styles={{\n\t\t\t\t\t\t\twidth: 200\n\t\t\t\t\t\t}} margin=\"normal\" value={this.props.states.mocks} onChange={this.OnChangeInput.bind(this)}/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\">\n\t\t\t\t\t\tadd task\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</Paper>\n\t\t\t<br/> {\n\t\t\t\tstates.tasks.length !== 0\n\t\t\t\t\t? (<Checkbox color=\"primary\" onClick={() => this.OnClickCheckTaskAll()} checked={states.tasks.filter(j => {\n\t\t\t\t\t\t\treturn j.etats === false;\n\t\t\t\t\t\t}).length === 0}/>)\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t<span style={states.tasks.filter(j => {\n\t\t\t\t\treturn j.etats === false;\n\t\t\t\t}).length === 0\n\t\t\t\t\t? completedStyle\n\t\t\t\t\t: null}>\n\t\t\t\t{\n\t\t\t\t\tstates.tasks.length !== 0\n\t\t\t\t\t\t? \"check all\"\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</span>\n\t\t\t<Grid container={true}>\n\t\t\t\t{\n\t\t\t\t\tstates.tasks.map((h) => {\n\t\t\t\t\t\treturn (<div className=\"grid\">\n\t\t\t\t\t\t\t<Grid item=\"item\">\n\t\t\t\t\t\t\t\t<Paper style={styles.Paper}>\n\t\t\t\t\t\t\t\t\t<Checkbox checked={h.etats} color=\"primary\" onClick={() => this.OnClickCheckTask(h.id)}/> {\n\t\t\t\t\t\t\t\t\t\th.edit\n\t\t\t\t\t\t\t\t\t\t\t? <form styles={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tflexWrap: 'wrap'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} noValidate=\"noValidate\" autoComplete=\"off\" onSubmit={this.OnSubmitToUpdateTask.bind(this, h.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField id=\"standard-with-placeholder\" styles={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 2000\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}} margin=\"normal\" value={states.mocksEdit} onChange={this.OnChangeInputEdit.bind(this)} className=\"textfield\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t\t: <span style={h.etats\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? completedStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null} onDoubleClick={() => this.onClicEdit(h.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{h.task}{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t<Delete onClick={() => this.OnClickDeleteTask(h.id)} className=\"delete\" large=\"large\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</div>);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t</div>);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {states: state.tasks}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tdeleteTask: id => {\n\t\t\tdispatch({type: \"DELETE_TASK\", id: id});\n\t\t},\n\t\taddtask: state => {\n\t\t\tdispatch({type: \"ADD_TASK\", data: state});\n\t\t},\n\t\tacceptupdateedit: (id, state) => {\n\t\t\tdispatch({type: \"ACCEPT_UPDATE_EDIT\", id: id, data: state});\n\t\t},\n\t\tfetchtask: state => {\n\t\t\tdispatch({type: \"FETCH_TASK\", data: state});\n\t\t},\n\t\tchecktask: id => {\n\t\t\tdispatch({type: \"CHECK_TASK\", id: id});\n\t\t},\n\t\tupdatetaskedit: id => {\n\t\t\tdispatch({type: \"UPDATE_TASK_EDIT\", id: id});\n\t\t},\n\t\tupdatetask: data => {\n\t\t\tdispatch({type: \"UPDATE_TASK\", data: data});\n\t\t},\n\t\tchecktaskall: () => {\n\t\t\tdispatch({type: \"CHECK_TASK_ALL\"});\n\t\t},\n\t\tupdateMocks: data => {\n\t\t\tdispatch({type: \"UPDATE_MOCKS\", data: data});\n\t\t},\n\t\tupdateMocksEdit: data => {\n\t\t\tdispatch({type: \"UPDATE_MOCKS_EDIT\", data: data});\n\t\t},\n\t\tupdateOne: data => {\n\t\t\tdispatch({type: \"UPDATE_ONE\", data: data});\n\t\t},\n\t\tsetdatadefault: () => {\n\t\t\tdispatch({type: \"SET_DATA_DEFAULT\"});\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextFields);\n"]},"metadata":{},"sourceType":"module"}