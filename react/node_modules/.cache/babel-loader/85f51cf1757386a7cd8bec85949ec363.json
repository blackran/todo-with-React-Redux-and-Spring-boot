{"ast":null,"code":"var _jsxFileName = \"/home/files/hybrid pojects/TODO/react/src/Components/Login.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Paper } from '@material-ui/core';\nimport './Login.scss';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.OnSubmitLogin = e => {\n      e.preventDefault();\n      console.log(this.props.clients.dataClients);\n      const stock = this.props.clients.dataClients.filter(h => {\n        return h.pseudo === e.target.pseudo.value && h.password === e.target.password.value;\n      });\n      const bool = e.target.pseudo.value && e.target.password.value && stock.length > 0;\n\n      if (bool) {\n        this.props.history.push('/Task');\n        this.props.saveNumCli(stock);\n      }\n    };\n\n    this.state = {\n      pseudo: \"\",\n      password: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.clients.dataClients.length === 0) {\n      axios.get(\"http://localhost:8080/clients/all\").then(res => res.data).then(state => this.props.fetchClients(state)).catch(err => console.log(\"error parsing:\\n\", err));\n    }\n  }\n\n  OnChangeLoginInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"PaperLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: \"noValidate\",\n      autoComplete: \"off\",\n      onSubmit: this.OnSubmitLogin.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"PSEUDO\",\n      placeholder: \"Example\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: this.state.pseudo,\n      onChange: this.OnChangeLoginInput.bind(this),\n      name: \"pseudo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      label: \"PASSWORD\",\n      type: \"password\",\n      autoComplete: \"current-password\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: this.state.password,\n      onChange: this.OnChangeLoginInput.bind(this),\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Connecter\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    clients: state.clients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchClients: state => {\n      dispatch({\n        type: \"FETCH_CLIENT\",\n        data: state\n      });\n    },\n    deleteTask: id => {\n      dispatch({\n        type: \"DELETE_TASK\",\n        id: id\n      });\n    },\n    saveNumCli: data => {\n      dispatch({\n        type: \"SAVE_NUM_CLIENT\",\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/files/hybrid pojects/TODO/react/src/Components/Login.js"],"names":["React","Component","TextField","Button","Paper","connect","axios","Login","constructor","props","OnSubmitLogin","e","preventDefault","console","log","clients","dataClients","stock","filter","h","pseudo","target","value","password","bool","length","history","push","saveNumCli","state","componentDidMount","get","then","res","data","fetchClients","catch","err","OnChangeLoginInput","setState","name","render","bind","mapStateToProps","mapDispatchToProps","dispatch","type","deleteTask","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {Paper} from '@material-ui/core';\nimport './Login.scss';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpseudo: \"\",\n\t\t\tpassword: \"\"\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.clients.dataClients.length === 0) {\n\t\t\taxios.get(\"http://localhost:8080/clients/all\").then(res => res.data).then(state => this.props.fetchClients(state)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t}\n\t}\n\n\tOnSubmitLogin = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(this.props.clients.dataClients);\n\n\t\tconst stock = this.props.clients.dataClients.filter(h => {\n\t\t\treturn h.pseudo === e.target.pseudo.value && h.password === e.target.password.value;\n\t\t});\n\n\n\t\tconst bool = e.target.pseudo.value && e.target.password.value && (stock.length > 0)\n\t\tif (bool) {\n\t\t\tthis.props.history.push('/Task');\n\t\t\tthis.props.saveNumCli(stock);\n\t\t}\n\t}\n\n\tOnChangeLoginInput(e){\n\t\tthis.setState({[e.target.name]: e.target.value});\n\t}\n\n\trender() {\n\t\treturn (<div>\n\t\t\t<Paper className=\"PaperLogin\">\n\t\t\t\t<form noValidate=\"noValidate\" autoComplete=\"off\" onSubmit={this.OnSubmitLogin.bind(this)}>\n\t\t\t\t\t<TextField label=\"PSEUDO\" placeholder=\"Example\" margin=\"normal\" variant=\"outlined\" value={this.state.pseudo} onChange={this.OnChangeLoginInput.bind(this)} name=\"pseudo\"/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<TextField label=\"PASSWORD\" type=\"password\" autoComplete=\"current-password\" margin=\"normal\" variant=\"outlined\" value={this.state.password} onChange={this.OnChangeLoginInput.bind(this)} name=\"password\"/>\n\t\t\t\t\t<br/><br/>\n\t\t\t\t\t<Button type=\"submit\" variant=\"contained\">\n\t\t\t\t\t\tConnecter\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</Paper>\n\t\t</div>);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {clients: state.clients}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tfetchClients: state => {\n\t\t\tdispatch({type: \"FETCH_CLIENT\", data: state});\n\t\t},\n\t\tdeleteTask: id => {\n\t\t\tdispatch({type: \"DELETE_TASK\", id: id});\n\t\t},\n\t\tsaveNumCli: data => {\n\t\t\tdispatch({type: \"SAVE_NUM_CLIENT\", data:data})\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}