{"ast":null,"code":"import _slicedToArray from \"/home/files/hybrid pojects/TODO/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/files/hybrid pojects/TODO/react/src/Components/FormDialog2.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\n\nfunction FormDialog(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        pseudo = _React$useState4[0],\n        setPseudo = _React$useState4[1];\n\n  const _React$useState5 = React.useState(''),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        password = _React$useState6[0],\n        setPassword = _React$useState6[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n    setPseudo('');\n    setPassword('');\n  }\n\n  function handleClose() {\n    props.addclient({\n      \"id\": shortid.generate(),\n      \"pseudo\": pseudo,\n      \"password\": password\n    });\n    setOpen(false);\n    setPseudo('');\n    setPassword('');\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      float: 'right',\n      position: 'relative',\n      top: -20,\n      left: -10\n    },\n    onClick: handleClickOpen.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"creacte account?\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"ADD USER\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Add a lot user\"), React.createElement(\"form\", {\n    onSubmit: props.onsubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"pseudo\",\n    label: \"Pseudo\",\n    type: \"text\",\n    fullWidth: true,\n    value: pseudo,\n    onChange: e => setPseudo(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    type: \"text\",\n    fullWidth: true,\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Add\"))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    states: state.clients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addclient: state => {\n      dispatch({\n        type: \"ADD_CLIENTS\",\n        data: state\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);","map":{"version":3,"sources":["/home/files/hybrid pojects/TODO/react/src/Components/FormDialog2.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","shortid","connect","FormDialog","props","useState","open","setOpen","pseudo","setPseudo","password","setPassword","handleClickOpen","handleClose","addclient","generate","float","position","top","left","bind","onsubmit","e","target","value","mapStateToProps","state","states","clients","mapDispatchToProps","dispatch","type","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport shortid from 'shortid';\nimport {connect} from 'react-redux';\n\nfunction FormDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [pseudo, setPseudo] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  function handleClickOpen() {\n    setOpen(true);\n    setPseudo('');\n    setPassword('');\n  }\n\n  function handleClose() {\n    props.addclient({\"id\":shortid.generate(), \"pseudo\":pseudo, \"password\":password});\n    setOpen(false);\n    setPseudo('');\n    setPassword('');\n  }\n\n  return (\n    <div>\n      <div style={{float: 'right',position: 'relative', top: -20, left: -10}} onClick={handleClickOpen.bind(this)}>\n        creacte account?\n      </div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">ADD USER</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add a lot user\n          </DialogContentText>\n          <form onSubmit={props.onsubmit}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"pseudo\"\n              label=\"Pseudo\"\n              type=\"text\"\n              fullWidth\n              value={pseudo}\n              onChange={(e)=>setPseudo(e.target.value)}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              type=\"text\"\n              fullWidth\n              value={password}\n              onChange={(e)=>setPassword(e.target.value)}\n            />\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleClose} color=\"primary\">\n                Add\n              </Button>\n            </DialogActions>\n\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n\treturn {states: state.clients}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\taddclient: state => {\n\t\t\tdispatch({type: \"ADD_CLIENTS\", data: state});\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n"]},"metadata":{},"sourceType":"module"}