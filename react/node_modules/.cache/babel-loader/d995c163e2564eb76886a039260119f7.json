{"ast":null,"code":"import axios from 'axios';\nimport { ADD_CLIENTS, FETCH_CLIENT, UPDATE_ONE_CLIENT, UPDATE_MOCKS_CLIENT_PSEUDO, UPDATE_MOCKS_CLIENT_PASSWORD, DELETE_CLIENTS, UPDATE_CLIENTS } from '../actions/typesClients';\nconst initState = {\n  dataClients: [// {\n    // \tid:\"1\",\n    // \tpseudo:\"blackran\",\n    // \tpassword: \"pass\"\n    // }\n  ],\n  mocksClientPseudo: '',\n  mocksClientPassword: '',\n  one: true,\n  submitReusit: true\n};\n\nconst clientReducers = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_CLIENTS:\n      state.dataClients = [...state.dataClients, action.data];\n      axios.post(\"http://localhost:8080/clients/add\", action.data).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.clients);\n\n    case DELETE_CLIENTS:\n      const st = state.dataClients.filter(e => {\n        return e.id !== action.id;\n      });\n      state.dataClients = [...st];\n      axios.delete(\"http://localhost:8080/clients/\" + action.id).then(e => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.clients);\n\n    case UPDATE_CLIENTS:\n      const std1 = state.tasks.filter(e => {\n        return e.id !== action.id;\n      });\n      const sto1 = action.data;\n      state.tasks = [...std1, ...sto1];\n      return Object.assign({}, state, state.tasks);\n\n    case FETCH_CLIENT:\n      state.dataClients = [];\n      state.dataClients = [...state.dataClients, ...action.data];\n      return Object.assign({}, state, state.dataClients);\n\n    case UPDATE_ONE_CLIENT:\n      state.one = action.data;\n      return Object.assign({}, state, state.one);\n\n    case UPDATE_MOCKS_CLIENT_PSEUDO:\n      state.mocksClientPseudo = action.data;\n      return Object.assign({}, state, state.mocksClientPseudo);\n\n    case UPDATE_MOCKS_CLIENT_PASSWORD:\n      state.mocksClientPassword = action.data;\n      return Object.assign({}, state, state.mocksClientPassword);\n\n    default:\n      return state;\n  }\n};\n\nexport default clientReducers;","map":{"version":3,"sources":["/home/blackran/Desktop/TODO/react/src/reducers/clientReducers.js"],"names":["axios","ADD_CLIENTS","FETCH_CLIENT","UPDATE_ONE_CLIENT","UPDATE_MOCKS_CLIENT_PSEUDO","UPDATE_MOCKS_CLIENT_PASSWORD","DELETE_CLIENTS","UPDATE_CLIENTS","initState","dataClients","mocksClientPseudo","mocksClientPassword","one","submitReusit","clientReducers","state","action","type","data","post","then","h","console","log","catch","err","Object","assign","clients","st","filter","e","id","delete","std1","tasks","sto1"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n\tADD_CLIENTS,\n\tFETCH_CLIENT,\n\tUPDATE_ONE_CLIENT,\n\tUPDATE_MOCKS_CLIENT_PSEUDO,\n\tUPDATE_MOCKS_CLIENT_PASSWORD,\n\tDELETE_CLIENTS,\n\tUPDATE_CLIENTS\n} from '../actions/typesClients';\n\nconst initState = {\n\tdataClients: [\n\t\t// {\n\t\t// \tid:\"1\",\n\t\t// \tpseudo:\"blackran\",\n\t\t// \tpassword: \"pass\"\n\t\t// }\n\t],\n\tmocksClientPseudo: '',\n\tmocksClientPassword: '',\n\tone: true,\n\tsubmitReusit: true\n}\nconst clientReducers = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_CLIENTS:\n\t\t\tstate.dataClients = [\n\t\t\t\t...state.dataClients,\n\t\t\t\taction.data\n\t\t\t];\n\t\t\taxios.post(\"http://localhost:8080/clients/add\", action.data).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.clients);\n\n\t\tcase DELETE_CLIENTS:\n\t\t\tconst st = state.dataClients.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tstate.dataClients = [...st]\n\t\t\taxios.delete(\"http://localhost:8080/clients/\" + action.id).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.clients);\n\n\t\tcase UPDATE_CLIENTS:\n\t\t\tconst std1 = state.tasks.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tconst sto1 = action.data;\n\t\t\tstate.tasks = [\n\t\t\t\t...std1, ...sto1\n\t\t\t];\n\t\t\treturn Object.assign({}, state, state.tasks);\n\n\t\tcase FETCH_CLIENT:\n\t\t\tstate.dataClients = [];\n\t\t\tstate.dataClients = [\n\t\t\t\t...state.dataClients,\n\t\t\t\t...action.data\n\t\t\t];\n\t\t\treturn Object.assign({}, state, state.dataClients);\n\n\t\tcase UPDATE_ONE_CLIENT:\n\t\t\tstate.one = action.data;\n\t\t\treturn Object.assign({}, state, state.one);\n\n\t\tcase UPDATE_MOCKS_CLIENT_PSEUDO:\n\t\t\tstate.mocksClientPseudo = action.data;\n\t\t\treturn Object.assign({}, state, state.mocksClientPseudo);\n\n\t\tcase UPDATE_MOCKS_CLIENT_PASSWORD:\n\t\t\tstate.mocksClientPassword = action.data;\n\t\t\treturn Object.assign({}, state, state.mocksClientPassword);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default clientReducers;\n"]},"metadata":{},"sourceType":"module"}