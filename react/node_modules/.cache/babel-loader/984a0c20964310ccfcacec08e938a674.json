{"ast":null,"code":"var _jsxFileName = \"/home/files/hybrid pojects/TODO/react/src/Components/Clients.js\";\nimport React, { Component } from 'react'; // import TextField from '@material-ui/core/TextField';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Delete from '@material-ui/icons/DeleteRounded';\nimport Edit from '@material-ui/icons/EditRounded';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport axios from 'axios';\nimport FormDialog from './FormDialog';\n\nclass Clients extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.OnSubmitClients = e => {\n      e.preventDefault();\n      const stock = {\n        id: shortid.generate(),\n        pseudo: this.props.clients.mocksClientPseudo,\n        password: this.props.clients.mocksClientPassword\n      };\n      this.props.addclient(stock);\n      this.props.OnChangeClientInputPseudo(\"\");\n      this.props.OnChangeClientInputPassword(\"\");\n    };\n\n    this.OnChangeClientInputPseudo = e => {\n      this.props.OnChangeClientInputPseudo(e.target.value);\n    };\n\n    this.OnChangeClientInputPassword = e => {\n      this.props.OnChangeClientInputPassword(e.target.value);\n    };\n\n    this.OnClickAddButton = () => {};\n\n    this.OnClickModifierButton = e => {\n      e.preventDefault();\n      const stock = {\n        id: \"id\",\n        pseudo: this.props.clients.mocksClientPseudo,\n        password: this.props.clients.mocksClientPassword\n      };\n      this.props.updateClients(stock);\n      this.props.OnChangeClientInputPseudo(\"\");\n      this.props.OnChangeClientInputPassword(\"\");\n      this.props.setToggleShow(false);\n    };\n\n    this.OnClickDeleteClients = id => {\n      return this.props.deleteClients(id);\n    };\n\n    this.OnClickEditClients = id => {// return this.props.\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.clients.dataClients.length === 0) {\n      axios.get(\"http://localhost:8080/clients/all\").then(res => res.data).then(state => this.props.fetchClients(state)).catch(err => console.log(\"error parsing:\\n\", err));\n    }\n  }\n\n  render() {\n    const clients = this.props.clients;\n    const styles = {\n      PaperHead: {\n        padding: 10,\n        margin: 10,\n        color: '#727185',\n        borderRadius: 3\n      },\n      Paper: {\n        padding: 10,\n        paddingRigth: 20,\n        margin: 10,\n        display: 'block'\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, console.log(this.props.clients.saveNumCli), React.createElement(FormDialog, {\n      onsubmit: this.OnSubmitClients.bind(this),\n      onchangePseudo: this.OnChangeClientInputPseudo,\n      onchangePassword: this.OnChangeClientInputPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, clients.dataClients.map(h => {\n      return React.createElement(\"span\", {\n        key: h.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: styles.Paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, h.pseudo, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"pass: \", h.password, \" \"), React.createElement(Edit, {\n        onClick: () => this.OnClickEditClients(h.id),\n        className: \"configClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Delete, {\n        onClick: () => this.OnClickDeleteClients(h.id),\n        className: \"configClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))));\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    clients: state.clients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteClients: id => {\n      dispatch({\n        type: \"DELETE_CLIENTS\",\n        id: id\n      });\n    },\n    addclient: state => {\n      dispatch({\n        type: \"ADD_CLIENTS\",\n        data: state\n      });\n    },\n    acceptupdateedit: (id, state) => {\n      dispatch({\n        type: \"ACCEPT_UPDATE_EDIT\",\n        id: id,\n        data: state\n      });\n    },\n    fetchClients: state => {\n      dispatch({\n        type: \"FETCH_CLIENT\",\n        data: state\n      });\n    },\n    updateClients: data => {\n      dispatch({\n        type: \"UPDATE_CLIENTS\",\n        data: data\n      });\n    },\n    OnChangeClientInputPseudo: data => {\n      dispatch({\n        type: \"UPDATE_MOCKS_CLIENT_PSEUDO\",\n        data: data\n      });\n    },\n    OnChangeClientInputPassword: data => {\n      dispatch({\n        type: \"UPDATE_MOCKS_CLIENT_PASSWORD\",\n        data: data\n      });\n    },\n    updateMocksEdit: data => {\n      dispatch({\n        type: \"UPDATE_MOCKS_EDIT\",\n        data: data\n      });\n    },\n    updateOneClient: data => {\n      dispatch({\n        type: \"UPDATE_ONE_CLIENT\",\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients);","map":{"version":3,"sources":["/home/files/hybrid pojects/TODO/react/src/Components/Clients.js"],"names":["React","Component","Grid","Paper","Delete","Edit","connect","shortid","axios","FormDialog","Clients","OnSubmitClients","e","preventDefault","stock","id","generate","pseudo","props","clients","mocksClientPseudo","password","mocksClientPassword","addclient","OnChangeClientInputPseudo","OnChangeClientInputPassword","target","value","OnClickAddButton","OnClickModifierButton","updateClients","setToggleShow","OnClickDeleteClients","deleteClients","OnClickEditClients","componentDidMount","dataClients","length","get","then","res","data","state","fetchClients","catch","err","console","log","render","styles","PaperHead","padding","margin","color","borderRadius","paddingRigth","display","saveNumCli","bind","map","h","mapStateToProps","mapDispatchToProps","dispatch","type","acceptupdateedit","updateMocksEdit","updateOneClient"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Delete from '@material-ui/icons/DeleteRounded';\nimport Edit from '@material-ui/icons/EditRounded';\nimport {connect} from 'react-redux';\nimport shortid from 'shortid';\nimport axios from 'axios';\nimport FormDialog from './FormDialog';\n\nclass Clients extends Component {\n\tcomponentDidMount() {\n\t\tif (this.props.clients.dataClients.length === 0) {\n\t\t\taxios.get(\"http://localhost:8080/clients/all\").then(res => res.data).then(state => this.props.fetchClients(state)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t}\n\t}\n\n\tOnSubmitClients = (e) => {\n\t\te.preventDefault();\n\t\tconst stock = {\n\t\t\tid: shortid.generate(),\n\t\t\tpseudo: this.props.clients.mocksClientPseudo,\n\t\t\tpassword: this.props.clients.mocksClientPassword\n\t\t};\n\t\tthis.props.addclient(stock);\n\t\tthis.props.OnChangeClientInputPseudo(\"\");\n\t\tthis.props.OnChangeClientInputPassword(\"\");\n\t}\n\tOnChangeClientInputPseudo = (e) => {\n\t\tthis.props.OnChangeClientInputPseudo(e.target.value);\n\t}\n\n\tOnChangeClientInputPassword = (e) => {\n\t\tthis.props.OnChangeClientInputPassword(e.target.value);\n\t}\n\n\tOnClickAddButton = () => {\n\t}\n\n\tOnClickModifierButton = (e) => {\n\t\te.preventDefault();\n\n\t\tconst stock = {\n\t\t\tid: \"id\",\n\t\t\tpseudo: this.props.clients.mocksClientPseudo,\n\t\t\tpassword: this.props.clients.mocksClientPassword\n\t\t};\n\t\tthis.props.updateClients(stock);\n\t\tthis.props.OnChangeClientInputPseudo(\"\");\n\t\tthis.props.OnChangeClientInputPassword(\"\");\n\t\tthis.props.setToggleShow(false);\n\t}\n\n\tOnClickDeleteClients = (id) => {\n\t\treturn this.props.deleteClients(id);\n\t}\n\n\tOnClickEditClients = (id) => {\n\t\t// return this.props.\n\t}\n\n\trender() {\n\t\tconst {clients} = this.props;\n\t\tconst styles = {\n\t\t\tPaperHead: {\n\t\t\t\tpadding: 10,\n\t\t\t\tmargin: 10,\n\t\t\t\tcolor: '#727185',\n\t\t\t\tborderRadius: 3\n\t\t\t},\n\t\t\tPaper: {\n\t\t\t\tpadding: 10,\n\t\t\t\tpaddingRigth: 20,\n\t\t\t\tmargin: 10,\n\t\t\t\tdisplay: 'block'\n\t\t\t}\n\t\t}\n\t\treturn (<div>\n\t\t\t{console.log(this.props.clients.saveNumCli)}\n\t\t\t<FormDialog onsubmit={this.OnSubmitClients.bind(this)} onchangePseudo={this.OnChangeClientInputPseudo} onchangePassword={this.OnChangeClientInputPassword}/>\n\t\t\t<Grid container={true}>\n\t\t\t\t\t{\n\t\t\t\t\t\tclients.dataClients.map((h) => {\n\t\t\t\t\t\t\treturn (<span key={h.id}>\n\t\t\t\t\t\t\t\t<Grid item={true}>\n\t\t\t\t\t\t\t\t\t<Paper style={styles.Paper}>\n\t\t\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\t\t\t{h.pseudo}{\" \"}\n\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\tpass: {h.password}{\" \"}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<Edit onClick={() => this.OnClickEditClients(h.id)} className=\"configClient\"/>\n\t\t\t\t\t\t\t\t\t\t<Delete onClick={() => this.OnClickDeleteClients(h.id)} className=\"configClient\"/>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid></span>);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t</Grid>\n\t\t</div>);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {clients: state.clients}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tdeleteClients: id => {\n\t\t\tdispatch({type: \"DELETE_CLIENTS\", id: id});\n\t\t},\n\t\taddclient: state => {\n\t\t\tdispatch({type: \"ADD_CLIENTS\", data: state});\n\t\t},\n\n\t\tacceptupdateedit: (id, state) => {\n\t\t\tdispatch({type: \"ACCEPT_UPDATE_EDIT\", id: id, data: state});\n\t\t},\n\n\t\tfetchClients: state => {\n\t\t\tdispatch({type: \"FETCH_CLIENT\", data: state});\n\t\t},\n\n\t\tupdateClients: data => {\n\t\t\tdispatch({type: \"UPDATE_CLIENTS\", data: data});\n\t\t},\n\n\t\tOnChangeClientInputPseudo: data => {\n\t\t\tdispatch({type: \"UPDATE_MOCKS_CLIENT_PSEUDO\", data: data});\n\t\t},\n\t\tOnChangeClientInputPassword: data => {\n\t\t\tdispatch({type: \"UPDATE_MOCKS_CLIENT_PASSWORD\", data: data});\n\t\t},\n\n\t\tupdateMocksEdit: data => {\n\t\t\tdispatch({type: \"UPDATE_MOCKS_EDIT\", data: data});\n\t\t},\n\n\t\tupdateOneClient: data => {\n\t\t\tdispatch({type: \"UPDATE_ONE_CLIENT\", data: data});\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients);\n"]},"metadata":{},"sourceType":"module"}