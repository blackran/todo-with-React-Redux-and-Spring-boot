{"ast":null,"code":"import { ADD_TASK, DELETE_TASK, UPDATE_MOCKS, CHECK_TASK, CHECK_TASK_ALL, UPDATE_TASK, UPDATE_TASK_EDIT, FETCH_TASK, UPDATE_ONE, UPDATE_MOCKS_EDIT, ACCEPT_UPDATE_EDIT, SET_DATA_DEFAULT } from '../actions/typesTask';\nimport axios from 'axios';\nconst initState = {\n  tasks: [// {\n    // \t'id': '1',\n    // \ttask: 'task1',\n    // \tetats: false\n    // }\n  ],\n  mocks: '',\n  mocksEdit: '',\n  one: true\n};\n\nconst taskReducer = (state = initState, action) => {\n  switch (action.type) {\n    case DELETE_TASK:\n      const st = state.tasks.filter(e => {\n        return e.id !== action.id;\n      });\n      state.tasks = [...st];\n      axios.delete(\"http://localhost:8080/task/\" + action.id).then(e => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.tasks);\n\n    case CHECK_TASK:\n      const std = state.tasks.filter(e => {\n        return e.id !== action.id;\n      });\n      const sto = state.tasks.filter(e => {\n        return e.id === action.id;\n      });\n      const Sto = {\n        id: sto[0].id,\n        task: sto[0].task,\n        etats: !sto[0].etats,\n        edit: sto.edit\n      };\n      state.tasks = [...std, Sto];\n      axios.post(\"http://localhost:8080/task/update/\" + action.id, Sto).then(e => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.tasks);\n\n    case UPDATE_TASK:\n      const std1 = state.tasks.filter(e => {\n        return e.id !== action.id;\n      });\n      const sto1 = action.data;\n      state.tasks = [...std1, ...sto1];\n      return Object.assign({}, state, state.tasks);\n\n    case UPDATE_TASK_EDIT:\n      const reinit = state.tasks.map(o => {\n        return o.etats === true ? {\n          id: o.id,\n          task: o.task,\n          etats: o.etats,\n          edit: false\n        } : o;\n      });\n      state.tasks = [...reinit];\n      Object.assign({}, state, state.tasks);\n      const std2 = state.tasks.filter(e => {\n        return e.id !== action.id;\n      });\n      const sto2 = state.tasks.filter(e => {\n        return e.id === action.id;\n      });\n      state.mocksEdit = sto2[0].task;\n      state.tasks = [...std2, {\n        id: sto2[0].id,\n        task: sto2[0].task,\n        etats: sto2[0].etats,\n        edit: !sto2.edit\n      }];\n      return Object.assign({}, state, state.tasks);\n\n    case CHECK_TASK_ALL:\n      const ini = state.tasks.filter(j => {\n        return j.etats === false;\n      }).length !== 0;\n      const sti = state.tasks.map(e => {\n        return {\n          id: e.id,\n          task: e.task,\n          etats: ini,\n          edit: e.edit\n        };\n      });\n      state.tasks = [...sti];\n      state.tasks.map(j => {\n        return axios.post(\"http://localhost:8080/task/update/\" + j.id, j).catch(err => console.log(\"error parsing:\\n\", err));\n      });\n      return Object.assign({}, state, state.tasks);\n\n    case ADD_TASK:\n      state.tasks = [...state.tasks, action.data];\n      axios.post(\"http://localhost:8080/task/add\", action.data).then(h => console.log(h)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.tasks);\n\n    case FETCH_TASK:\n      state.tasks = [...state.tasks, ...action.data];\n      return Object.assign({}, state, state.tasks);\n\n    case UPDATE_MOCKS:\n      state.mocks = action.data;\n      return Object.assign({}, state, state.tasks.mocks);\n\n    case UPDATE_MOCKS_EDIT:\n      state.mocksEdit = action.data;\n      return Object.assign({}, state, state.tasks.mocksEdit);\n\n    case UPDATE_ONE:\n      state.one = action.data;\n      return Object.assign({}, state, state.tasks.one);\n\n    case ACCEPT_UPDATE_EDIT:\n      const reinit1 = state.tasks.filter(o => {\n        return o.id !== action.id;\n      });\n      state.tasks = [...reinit1, action.data];\n      axios.post(\"http://localhost:8080/task/update/\" + action.id, action.data).then(e => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n      return Object.assign({}, state, state.tasks);\n\n    case SET_DATA_DEFAULT:\n      state.tasks = [];\n      return Object.assign({}, state, state.tasks);\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;","map":{"version":3,"sources":["/home/blackran/Desktop/TODO/REACT/src/reducers/taskReducer.js"],"names":["ADD_TASK","DELETE_TASK","UPDATE_MOCKS","CHECK_TASK","CHECK_TASK_ALL","UPDATE_TASK","UPDATE_TASK_EDIT","FETCH_TASK","UPDATE_ONE","UPDATE_MOCKS_EDIT","ACCEPT_UPDATE_EDIT","SET_DATA_DEFAULT","axios","initState","tasks","mocks","mocksEdit","one","taskReducer","state","action","type","st","filter","e","id","delete","then","console","log","catch","err","Object","assign","std","sto","Sto","task","etats","edit","post","std1","sto1","data","reinit","map","o","std2","sto2","ini","j","length","sti","h","reinit1"],"mappings":"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","sourcesContent":["import {\n\tADD_TASK,\n\tDELETE_TASK,\n\tUPDATE_MOCKS,\n\tCHECK_TASK,\n\tCHECK_TASK_ALL,\n\tUPDATE_TASK,\n\tUPDATE_TASK_EDIT,\n\tFETCH_TASK,\n\tUPDATE_ONE,\n\tUPDATE_MOCKS_EDIT,\n\tACCEPT_UPDATE_EDIT,\n\tSET_DATA_DEFAULT\n} from '../actions/typesTask';\nimport axios from 'axios';\nconst initState = {\n\ttasks: [\n\t\t// {\n\t\t// \t'id': '1',\n\t\t// \ttask: 'task1',\n\t\t// \tetats: false\n\t\t// }\n\t],\n\tmocks: '',\n\tmocksEdit: '',\n\tone: true\n}\nconst taskReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase DELETE_TASK:\n\t\t\tconst st = state.tasks.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tstate.tasks = [...st]\n\t\t\taxios.delete(\"http://localhost:8080/task/\"+action.id).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.tasks);\n\n\t\tcase CHECK_TASK:\n\t\t\tconst std = state.tasks.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tconst sto = state.tasks.filter(e => {\n\t\t\t\treturn e.id === action.id;\n\t\t\t});\n\t\t\tconst Sto = {\n\t\t\t\tid: sto[0].id,\n\t\t\t\ttask: sto[0].task,\n\t\t\t\tetats: !sto[0].etats,\n\t\t\t\tedit: sto.edit\n\t\t\t};\n\t\t\tstate.tasks = [\n\t\t\t\t...std, Sto\n\t\t\t];\n\t\t\taxios.post(\"http://localhost:8080/task/update/\"+action.id, Sto).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.tasks);\n\n\t\tcase UPDATE_TASK:\n\t\t\tconst std1 = state.tasks.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tconst sto1 = action.data;\n\t\t\tstate.tasks = [\n\t\t\t\t...std1, ...sto1\n\t\t\t];\n\t\t\treturn Object.assign({}, state, state.tasks);\n\n\t\tcase UPDATE_TASK_EDIT:\n\t\t\tconst reinit = state.tasks.map(o => {\n\t\t\t\treturn o.etats === true\n\t\t\t\t\t? ({id: o.id, task: o.task, etats: o.etats, edit: false})\n\t\t\t\t\t: o;\n\t\t\t});\n\t\t\tstate.tasks = [...reinit];\n\t\t\tObject.assign({}, state, state.tasks);\n\t\t\tconst std2 = state.tasks.filter(e => {\n\t\t\t\treturn e.id !== action.id;\n\t\t\t});\n\t\t\tconst sto2 = state.tasks.filter(e => {\n\t\t\t\treturn e.id === action.id;\n\t\t\t});\n\t\t\tstate.mocksEdit = sto2[0].task;\n\t\t\tstate.tasks = [\n\t\t\t\t...std2, {\n\t\t\t\t\tid: sto2[0].id,\n\t\t\t\t\ttask: sto2[0].task,\n\t\t\t\t\tetats: sto2[0].etats,\n\t\t\t\t\tedit: !sto2.edit\n\t\t\t\t}\n\t\t\t];\n\t\t\treturn Object.assign({}, state, state.tasks);\n\n\t\tcase CHECK_TASK_ALL:\n\t\t\tconst ini = state.tasks.filter(j => {\n\t\t\t\treturn j.etats === false;\n\t\t\t}).length !== 0;\n\t\t\tconst sti = state.tasks.map(e => {\n\t\t\t\treturn {id: e.id, task: e.task, etats: ini, edit: e.edit}\n\t\t\t});\n\t\t\tstate.tasks = [...sti]\n\t\t\tstate.tasks.map(j=>{\n\t\t\t\treturn axios.post(\"http://localhost:8080/task/update/\"+j.id, j).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\t});\n\t\t\treturn Object.assign({}, state, state.tasks);\n\n\t\tcase ADD_TASK:\n\t\t\tstate.tasks = [\n\t\t\t\t...state.tasks,\n\t\t\t\taction.data\n\t\t\t];\n\t\t\taxios.post(\"http://localhost:8080/task/add\", action.data)\n\t\t\t.then(h=>console.log(h))\n\t\t\t.catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.tasks);\n\n\t\tcase FETCH_TASK:\n\t\t\tstate.tasks = [\n\t\t\t\t...state.tasks,\n\t\t\t\t...action.data\n\t\t\t];\n\t\t\treturn Object.assign({}, state, state.tasks);\n\n\t\tcase UPDATE_MOCKS:\n\t\t\tstate.mocks = action.data;\n\t\t\treturn Object.assign({}, state, state.tasks.mocks);\n\n\t\tcase UPDATE_MOCKS_EDIT:\n\t\t\tstate.mocksEdit = action.data;\n\t\t\treturn Object.assign({}, state, state.tasks.mocksEdit);\n\n\t\tcase UPDATE_ONE:\n\t\t\tstate.one = action.data;\n\t\t\treturn Object.assign({}, state, state.tasks.one);\n\n\t\tcase ACCEPT_UPDATE_EDIT:\n\t\t\tconst reinit1 = state.tasks.filter(o => {\n\t\t\t\treturn o.id !== action.id;\n\t\t\t});\n\t\t\tstate.tasks = [\n\t\t\t\t...reinit1,\n\t\t\t\taction.data\n\t\t\t];\n\t\t\taxios.post(\"http://localhost:8080/task/update/\"+action.id, action.data).then((e) => console.log(e)).catch(err => console.log(\"error parsing:\\n\", err));\n\t\t\treturn Object.assign({}, state, state.tasks);\n\t\tcase SET_DATA_DEFAULT:\n\t\t\tstate.tasks = [];\n\t\t\treturn Object.assign({}, state, state.tasks);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default taskReducer;\n"]},"metadata":{},"sourceType":"module"}